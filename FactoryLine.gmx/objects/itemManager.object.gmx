<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define data structures

enum Item {
    tag, name, sprite, layers, count
}

enum ItemLayer {
    tag, sprite, x, y, scale, count
}

layers = ds_grid_create( 0, ItemLayer.count );
items = ds_grid_create( 0, Item.count );
recipes = ds_map_create( );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load generic recipes

var tFile = file_text_open_read( working_directory + "/recipes/recipes.dat" );
var tDefine = noone;
var tMethod = "";
while ( !file_text_eof( tFile ) ) {
    var tRecipe = "";
    while( !file_text_eoln( tFile ) ) {
        tRecipe += file_text_read_string( tFile );
    }
    if ( string_count( "=", tRecipe ) &gt; 0 ) {
        tRecipe = string_replace( tRecipe, "=", ( "=" + tMethod + ":" ) );
        if ( script_exists( tDefine ) ) {
            recipeParse( tRecipe, tDefine );
        } else {
            recipeParse( tRecipe );
        }
    } else if ( string_count( ":", tRecipe ) &gt; 0 ) {
        tMethod = string_replace_all( tRecipe, ":", "" );
    } else if ( asset_get_type( tRecipe ) == asset_script ) {
        tDefine = asset_get_index( tRecipe );
    }
    file_text_readln( tFile );
}
file_text_close( tFile );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load attachment recipes

var tBase, tBaseCount = 0;
var tAttach, tAttachCount = 0;
var tBaseAttachMax = false;

//Load in base parts and attachable parts
ini_open( working_directory + "/recipes/attachments.dat" );
while ( ini_key_exists( "attach", string( tAttachCount ) ) ) {
    tAttach[tAttachCount] = ini_read_string( "attach", string( tAttachCount ), "" );
    ++tAttachCount;
}
while ( ini_key_exists( "base", string( tBaseCount ) ) ) {
    tBase[tBaseCount] = ini_read_string( "base", string( tBaseCount ), "" );
    for ( var i = 0; i &lt; tAttachCount; ++i ) {
        tBaseAttachMax[tBaseCount, i] = ini_read_real(
            tBase[tBaseCount], tAttach[i]+"-max",
            ini_read_real( tAttach[i], "max", 0 ) );
    }
    ++tBaseCount;
}
ini_close( );

//Load in item data for each
for ( var i = 0; i &lt; tBaseCount; ++i ) {
    tBase[i] = itemProperty( tBase[i], Item.tag );
}
for ( var i = 0; i &lt; tAttachCount; ++i ) {
    tAttach[i] = itemProperty( tAttach[i], Item.tag );
}

//Generate combinations
var tCount = 0;
var tQueue = ds_queue_create( );
for ( var i = 0; i &lt; tBaseCount; ++i ) {
    //Seed the queue
    var tDataSeed = ds_grid_create( 1, tAttachCount );
    for ( var  j = 0; j &lt; tAttachCount; ++j ) {
        tDataSeed[# 0, j] = 0;
    }
    ds_queue_enqueue( tQueue, tBase[i], tDataSeed );
    
    //Attempt all combinations
    while ( !ds_queue_empty( tQueue ) ) {
        var tItemOld = ds_queue_dequeue( tQueue );
        var tDataOld = ds_queue_dequeue( tQueue );
        
        for ( var j = 0; j &lt; tAttachCount; ++j ) {
            if ( tDataOld[# 0, j] &lt; tBaseAttachMax[i, j] ) {
                if ( recipeExists( "attacher", tItemOld, tAttach[j] ) ) continue;
                
                //Copy the data to a new array;
                var tDataNew = ds_grid_create( 1, tAttachCount );
                ds_grid_copy( tDataNew, tDataOld );
                
                //Add the attachment
                ++tDataNew[# 0, j];
                
                //Define the new item
                var tItemNew = itemLoadAttach( tBase[i], tAttach, tDataNew );
                
                //Define a recipe
                recipeDefine( tItemNew, "attacher", tItemOld, tAttach[j] );
                
                ++tCount;
                if ( ( tCount % 1000 ) == 0 ) {
                    show_debug_message(tCount);
                }
                
                //Put it back in the queue
                ds_queue_enqueue( tQueue, tItemNew, tDataNew );
            }
        }
        
        ds_grid_destroy( tDataOld );
    }
}
ds_queue_destroy( tQueue );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Free data structures

ds_map_destroy( recipes );
ds_grid_destroy( items );
ds_grid_destroy( layers );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
