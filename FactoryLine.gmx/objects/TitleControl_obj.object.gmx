<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialization

wallPos = 0;
wallSpeed = 30;

background_hspeed[1] = -0.25;

textPos[0] = room_width/2;
textPos[1] = 570;
textAlpha = 1;

logo = instance_create(room_width/2,475,Logo_obj);

pressed = false;
transition = false;

timer = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step

if (keyboard_check(vk_space)) {
    pressed = true;
}

if (pressed) {
    textAlpha -= .05;
    wallPos += wallSpeed;
    if (wallPos &gt; room_height) {
        wallPos = room_height;
    }
}

if (wallPos &gt; logo.bbox_top) {
    logo.y = wallPos + logo.sprite_height;
}

if (logo.y &gt;= room_height) {
    logo.y = room_height
    
    var scale = (room_height - wallPos) / logo.sprite_height;
    if (scale != 0) {logo.image_yscale = scale;}
    else {
        logo.visible = false;
        transition = true;
    }
}

if (transition) {
    timer --;
}

if (timer &lt;= 0) {
    room_goto_next();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw

// Gears
draw_set_alpha(min(.5,textAlpha));
Draw_Gear(1200,860,100,8,-current_time/1000,make_color_rgb(25,25,25));
Draw_Gear(1375,860,100,8,current_time/1000 + pi/6.5,make_color_rgb(20,20,20));
Draw_Gear(1550,860,100,8,-current_time/1000,make_color_rgb(25,25,25));
Draw_Gear(1725,860,100,8,current_time/1000 + pi/6.5,make_color_rgb(20,20,20));
Draw_Gear(1900,860,100,8,-current_time/1000,make_color_rgb(25,25,25));
draw_set_alpha(1);

if (!pressed) {
        draw_sprite_ext(Begin_spr,0,textPos[0],textPos[1],1,1,0,c_white,cos(2*current_time/1000.0));
    }

else {
    draw_sprite(Wall_spr,0,0,wallPos-1080);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
