<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Global Inits
randomize();
globalInit();

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize quota structures

enum Quota {
    enabled, itemID, required, produced, positionX, positionY, count
}

quota = ds_grid_create( 0, Quota.count );
quotaOrder = ds_list_create( );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create other controllers

instance_create( 0, 0, deskController );
instance_create( 0, 0, selectionController );
instance_create( 0, 0, inputMaskingController );
instance_create( 0, 0, fluidController );

with ( instance_create( 0, 0, restrictionController ) ) {
    event_user( 0 );
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Time

maxLevelTime = 2 * 60;
levelTime = maxLevelTime;

globalTween = 0;
globalTween_rate = 0.1;
tweenDelay = room_speed * 0.5;
alarm[ 0 ] = tweenDelay;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Level

level = 1;

spawnLevelOneRestriction = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Free quota structures

ds_list_destroy( quotaOrder );
ds_grid_destroy( quota );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset global tween

globalTween = 0;

alarm[ 0 ] = tweenDelay;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tick Time

levelTime -= delta_time / 1000000;

if ( levelTime &lt;= 0 ) {
    if ( !quotaCheck() ) {
        global.gameOverReason = "Quota not met.";
        doGameOver();
    }
    else {
        levelTime = maxLevelTime;
        with ( restrictionPar ) {
            instance_destroy();
        }
        level += 1;
        increaseRestrictionLevel( level );
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Advance global tween

//Used for things like conveyor belt arrow effect

globalTween = lerp( globalTween, 1, globalTween_rate );

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update resolution

view_wport = window_get_width( );
view_hport = window_get_height( );
if ( surface_get_width( application_surface ) != view_wview ||
    surface_get_height( application_surface ) != view_hview ) {
    surface_resize( application_surface, view_wview, view_hview );
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update quotas

var tRemove = ds_stack_create( );

for ( var tIndex = 0; tIndex &lt; ds_list_size( quotaOrder ); ++tIndex ) {
    var i = ds_list_find_value( quotaOrder, tIndex );
    
    var tGoalX = 0;
    var tGoalY = tIndex;
    if ( !quotaActive( i ) ) {
        tGoalX += 2;
    }
    
    quota[# i, Quota.positionX] = lerp( quota[# i, Quota.positionX], tGoalX, 0.05 );
    quota[# i, Quota.positionY] = lerp( quota[# i, Quota.positionY], tGoalY, 0.1 );
    
    if ( !quotaActive( i ) &amp;&amp; ( quota[# i, Quota.positionX] &gt; 1 ) ) {
        ds_stack_push( tRemove, tIndex );
    }
}

while ( !ds_stack_empty( tRemove ) ) {
    ds_list_delete( quotaOrder, ds_stack_pop( tRemove ) );
}
ds_stack_destroy( tRemove );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Day one end

if not spawnLevelOneRestriction {
    if ( level == 1 ){
    spawnLevelOneRestriction = true;
        if ( quotaCheck() ) {
            levelTime = min( levelTime, 30 );
            
            var tNewRestriction = instance_create( 0, 0, restrictionQuotaRemove );
    
            var tSpawnWidthRange = 500;
    
            var tNewLetter = instance_create( random( tSpawnWidthRange ), room_height / 2, restrictionDoc );
    
            with ( tNewLetter ) {
                text = "Since you have now#gotten the hang of things,#we're going to move you on from# {ITEM}";
                restrictionCon = tNewRestriction;
    
                sprite_index = document_spr;
    
            }
            with ( tNewRestriction ) {
                attachedLetter = tNewLetter;
                flag = "random1";
                amount = 0;
                event_user( 0 );
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Music

playSong( AlienFactory_bgm );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw quotas

draw_set_color( c_white );
draw_set_alpha( 1 );
draw_set_font( counter_ft );
draw_set_halign( fa_right );
draw_set_valign( fa_middle );

var tIndex = 0;
for ( var i = 0; i &lt; ds_list_size( quotaOrder ); ++i ) {
    var tIndex = ds_list_find_value( quotaOrder, i );
    
    var tItem = quota[# tIndex, Quota.itemID];
    var tRequired = quota[# tIndex, Quota.required];
    var tProduced = quota[# tIndex, Quota.produced];
    var tString = ( string( tProduced ) + " / " + string( tRequired ) );
    
    var px = room_width - 64 + 300 * quota[# tIndex, Quota.positionX];
    var py = 256 + 100 * quota[# tIndex, Quota.positionY];
    
    draw_set_color( c_black );
    draw_set_alpha( 0.4 );
    draw_rectangle( px-192, py-40, px+48, py+40, false );
    
    draw_set_color( c_white );
    draw_set_alpha( 1 );
    draw_text( px-64, py-6, tString );
    draw_text_transformed( px-64, py+28, itemProperty( tItem, Item.name ), 0.25, 0.25, 0 );
    itemDraw( tItem, px, py, get_timer()/1000000+tIndex, c_white, 2, 2 );
}

draw_set_color( c_white );
draw_set_alpha( 1 );
draw_set_halign( fa_left );
draw_set_valign( fa_top );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="123">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Remove a random quota

quotaDestroy( quotaGet( ) );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="122">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Add a quota

var tItem = irandom_range( 0, ds_grid_width( itemManager.items )-1 );
quotaCreate( tItem, irandom_range( 1, 5 ) );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message(generate_creature_name());
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
