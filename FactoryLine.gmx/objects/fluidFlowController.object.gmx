<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-101</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

showMap = true;
targetShader = dispersion_sdr;

resolution = 1;
prepSurface = -1;
stageSurface = -1;
fluidStateSurface = -1;
fluidFlowSurface = -1;

global.fluidSpeed = 1;

distortMap = distortMap_spr;
decayFactor = 0.9;

//uScale = shader_get_uniform(targetShader, "uScale");
s_decay = shader_get_uniform(targetShader, "decay");

//s_rawColorMap = shader_get_sampler_index(targetShader, "rawColorMap");



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Testing

posX = 0;
rate = 10;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clean up

//ds_priority_destroy( drawQueue );


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw on Prep

fluid_drawCircleBlob( prepSurface, fluidStateSurface);
fluid_computeFlow( fluidStateSurface, fluidFlowSurface );

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

if ( !surface_exists( prepSurface ) ) {
    prepSurface = surface_create( view_wview, view_hview );
    surface_set_target( prepSurface );
        draw_clear_alpha( c_black, 0 );
    surface_reset_target();
}
if ( !surface_exists( stageSurface ) ) {
    stageSurface = surface_create( view_wview, view_hview );
    surface_set_target( stageSurface );
        draw_clear_alpha( c_black, 0 );
    surface_reset_target();
}
if ( !surface_exists( fluidStateSurface ) ) {
    fluidStateSurface = surface_create( view_wview, view_hview );
    surface_set_target( fluidStateSurface );
        draw_clear_alpha( c_black, 0 );
    surface_reset_target();
}
if ( !surface_exists( fluidFlowSurface ) ) {
    fluidFlowSurface = surface_create( view_wview, view_hview );
    surface_set_target( fluidFlowSurface );
        draw_clear_alpha( c_black, 0 );
    surface_reset_target();
}

// bind shader.
//draw_set_blend_mode( bm_add );
    fluid_applyFlowToNewState( stageSurface, fluidFlowSurface, fluidStateSurface );
      
                    
    draw_surface_stretched(stageSurface, view_xview, view_yview, 
                    view_wview, 
                    view_hview);
        
    surface_copy( prepSurface, 0, 0, stageSurface ); //Copy the stage back to the prep
    
    
    //draw_surface_stretched(prepSurface, view_xview, view_yview, 
    //                view_wview, 
    //                view_hview);

//draw_set_blend_mode( bm_normal );

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEBUG

if ( showMap) {
    if ( surface_exists( fluidStateSurface ) ) {
        draw_surface_stretched( fluidStateSurface, view_xview + 0, view_yview + 50, 300, 250 );
    }
    
    if ( surface_exists( fluidFlowSurface ) ) {
        draw_surface_stretched( fluidFlowSurface, view_xview + 0, view_yview + 350, 300, 250 );
    }
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEBUG toggle
posX += rate;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
