<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>itemTray_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

sectionHeight = 64;
sectionOffset = 0;
ownerTray = noone;

heldItemType = dispenser;
heldItemOverSprite = noone;
heldItemImage = object_get_sprite( heldItemType );
heldItemQuantity = 2; //-1 for unlimited
tooltip = "";

heldItemSize = 0.1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Align to tray and dispense

if ( instance_exists( ownerTray ) ) {
    y = ownerTray.y 
            + ownerTray.currentSlideOffset 
            + ownerTray.headHeight 
            + sectionOffset 
            + sectionHeight/2;
    x = ownerTray.x;
    
    //Check to see if need to release hold on held item
    if ( mouseClicked( id ) ) {       
        if ( heldItemQuantity &gt;= 1 || heldItemQuantity &lt; 0 ) {
            heldItemQuantity -= 1;
            createPlaceableItem( x, y, instance_create( x, y, heldItemType ), id );
        }
            
        
    }
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tooltip

var tWidth = 200;
var tHeight = 32;
var tXOffset = -32;

if ( instance_exists( ownerTray ) ) {
    

    if ( mouseHoverOn( id ) &amp;&amp; ownerTray.currentSlideOffset &lt; 0 ) {
        draw_set_color( c_black );
        draw_set_alpha( 0.8 );
        draw_rectangle( mouse_x - tWidth + tXOffset, mouse_y - tHeight, mouse_x + tXOffset, mouse_y, false );
        
        draw_set_alpha( 1 );
        draw_set_font( main_ft );
        draw_set_valign( fa_center );
        draw_set_halign( fa_center );
        draw_set_color( c_lime );
        draw_text( mouse_x - tWidth/2 + tXOffset, mouse_y - tHeight/2, tooltip );
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the held item

draw_self();
if ( heldItemQuantity &gt;= 1 || heldItemQuantity &lt; 0) {
   
    if ( sprite_exists( heldItemOverSprite ) ) {
        var tOverSpriteWidth = sprite_get_width( heldItemOverSprite );
        var tOverScale = 32 / tOverSpriteWidth;
        draw_sprite_ext( heldItemOverSprite, image_index, x, y, tOverScale, tOverScale, 0, c_white, 1 );
    }
    else {
         var tSpriteHeight = sprite_get_height( heldItemImage );
        var tSpriteWidth = sprite_get_width( heldItemImage );
        var tSpriteSize = max( tSpriteHeight, tSpriteWidth );
        var MAX_SIZE = 32;
        
        
        var tSpriteScale = MAX_SIZE / tSpriteSize;
        draw_sprite_ext( heldItemImage, image_index, x, y, tSpriteScale, tSpriteScale, 0, c_white, 1 );
        
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
